wait(4)


local MenuPanel = game.CoreGui:FindFirstChild("SB team")
local playerCount = game.Players:GetPlayers()
-- Initialisation des services
local player = game.Players.LocalPlayer
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Stats = game:GetService("Stats")
local RunService = game:GetService("RunService")
-- Ajouter toute autre fonctionnalité nécessaire à l'UI (ex: AntiAFK)



-- Création des éléments UI
local ScreenGui = Instance.new("ScreenGui")
local TextLabel = Instance.new("TextLabel")
local farmLabel = Instance.new("TextLabel")
local formsLabel = Instance.new("TextLabel")
local meleeLabel = Instance.new("TextLabel")
local tpLabel = Instance.new("TextLabel")
local Reb = Instance.new("TextLabel")
local destroyLabel = Instance.new("TextLabel")
local farmButton = Instance.new("TextButton")
local formsButton = Instance.new("TextButton")
local playersButton = Instance.new("TextButton")
local MinimizeButton = Instance.new("TextButton")
local MainButton = Instance.new("TextButton")
local billsButton = Instance.new("TextButton")
local earthButton = Instance.new("TextButton")
local leftLine = Instance.new("Frame")
local rightLine = Instance.new("Frame")
local topLine = Instance.new("Frame")
local bottomLine = Instance.new("Frame")
local centerLine = Instance.new("Frame")
local upperLine = Instance.new("Frame")
local middleLine = Instance.new("Frame")
local frontSwitchLine = Instance.new("Frame")
local MenuPanel = Instance.new("Frame")
local ButtonCorner = Instance.new("UICorner")
local Panel = Instance.new("ImageLabel")
local panelExpanded = false
local sound = Instance.new("Sound", game.Workspace)
local imageLabel = Instance.new("ImageLabel")
local billsImageLabel = Instance.new("ImageLabel")
local earthImageLabel = Instance.new("ImageLabel")
local hbtcButton = Instance.new("TextButton")
local hbtcImageLabel = Instance.new("ImageLabel")
local hbtgvButton = Instance.new("TextButton")
local hbtgvImageLabel = Instance.new("ImageLabel")
local mle_extLabel = Instance.new("TextLabel")
local Transformation = Instance.new("TextLabel")
local REBHOOK = Instance.new("TextLabel")
local pingTextLabel = Instance.new("TextLabel")
local fpsTextLabel = Instance.new("TextLabel")
local missionTextLabel = Instance.new("TextLabel")
local timeTextLabel = Instance.new("TextLabel")
local button = Instance.new("TextButton", ScreenGui)
local bestId
local background = Instance.new("Frame")
local playerListContainer = Instance.new("ScrollingFrame")
local containerCorner = Instance.new("UICorner") 
local corner = Instance.new("UICorner")
local ballFrame = Instance.new("Frame")
local userId = player.UserId
local thumbnailType = Enum.ThumbnailType.HeadShot
local thumbnailSize = Enum.ThumbnailSize.Size48x48
local thumbnailUrl = Players:GetUserThumbnailAsync(userId, thumbnailType, thumbnailSize)
local UICorner = Instance.new("UICorner")
-- Création du ScreenGui et ajout au PlayerGui
local player = game.Players.LocalPlayer
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SB team"
ScreenGui.Parent = player.PlayerGui  -- Ajout uniquement à PlayerGui
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
-- Création du TextLabel
local TextLabel = Instance.new("TextLabel")
TextLabel.Parent = ScreenGui
TextLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)  -- Gris foncé pour le fond
TextLabel.BackgroundTransparency = 0.1  -- Transparence moyenne
TextLabel.BorderSizePixel = 2  -- Taille du contour
TextLabel.BorderColor3 = Color3.fromRGB(255, 0, 0)  -- Contour rouge
TextLabel.Position = UDim2.new(0.5, -205, 0.2, 0)  -- Déplacé plus haut, vers 20% de la hauteur de l'écran
TextLabel.Size = UDim2.new(0, 410, 0, 30)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "SB team     V3                  "
TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)  -- Texte rouge
TextLabel.TextScaled = true
TextLabel.Active = true
TextLabel.Draggable = true
-- Création du MenuPanel
local MenuPanel = Instance.new("Frame")
MenuPanel.Parent = TextLabel
MenuPanel.BackgroundColor3 = Color3.fromRGB(45, 45, 45)  -- Gris clair pour le MenuPanel
MenuPanel.BorderColor3 = Color3.fromRGB(255, 0, 0)  -- Bordure rouge
MenuPanel.BorderSizePixel = 2
MenuPanel.Position = UDim2.new(0, 0, 1, 0)  -- Positionné juste en dessous du TextLabel
MenuPanel.Size = UDim2.new(0, 410, 0, 400)
MenuPanel.Visible = false  -- Menu caché au départ
-- Création du MinimizeButton
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Parent = TextLabel
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Rouge
MinimizeButton.BorderColor3 = Color3.fromRGB(35, 35, 35)  -- Gris foncé
MinimizeButton.BorderSizePixel = 2
MinimizeButton.Position = UDim2.new(0.9, 10, 0.5, -14)
MinimizeButton.Size = UDim2.new(0, 30, 0, 26)
MinimizeButton.Font = Enum.Font.SourceSans
MinimizeButton.Text = ""
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- Texte blanc
MinimizeButton.TextSize = 18
-- Création de la ligne inférieure du MenuPanel
local bottomLine = Instance.new("Frame")
bottomLine.Parent = MenuPanel
bottomLine.Size = UDim2.new(1, 0, 0, 3)
bottomLine.Position = UDim2.new(0, 0, 1, -2)
bottomLine.BackgroundColor3 = Color3.fromRGB(109, 109, 109)  -- Gris moyen
bottomLine.BackgroundTransparency = 0.3  -- Légèrement transparent
bottomLine.BorderSizePixel = 0
-- AutoFarm Label
farmLabel.Parent = MenuPanel
farmLabel.BackgroundTransparency = 1
farmLabel.BorderSizePixel = 0
farmLabel.Position = UDim2.new(0.26, -90, 0.1, 0) -- Décalage légèrement à gauche
farmLabel.Size = UDim2.new(0, 100, 0, 40)
farmLabel.Font = Enum.Font.SourceSans
farmLabel.Text = "AUTO-FARM:  "
farmLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
farmLabel.TextScaled = true
farmLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
farmLabel.TextStrokeTransparency = 0

-- Form Label
meleeLabel.Parent = MenuPanel
meleeLabel.BackgroundTransparency = 1
meleeLabel.BorderSizePixel = 0
meleeLabel.Position = UDim2.new(0.26, -90, 0.3, 0) -- Décalage légèrement à gauche
meleeLabel.Size = UDim2.new(0, 100, 0, 30)
meleeLabel.Font = Enum.Font.SourceSans
meleeLabel.Text = "Skip Loading:  "
meleeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
meleeLabel.TextScaled = true
meleeLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
meleeLabel.TextStrokeTransparency = 0

-- Rebirth Label
Reb.Parent = MenuPanel
Reb.BackgroundTransparency = 1
Reb.BorderSizePixel = 0
Reb.Position = UDim2.new(0.26, -90, 0.5, 0) -- Décalage légèrement à gauche
Reb.Size = UDim2.new(0, 100, 0, 40)
Reb.Font = Enum.Font.SourceSans
Reb.Text = "REBIRTH:  "
Reb.TextColor3 = Color3.fromRGB(255, 255, 255)
Reb.TextScaled = true
Reb.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
Reb.TextStrokeTransparency = 0

-- Skills Label
mle_extLabel.Parent = MenuPanel
mle_extLabel.BackgroundTransparency = 1
mle_extLabel.BorderSizePixel = 0
mle_extLabel.Position = UDim2.new(0.26, -90, 0.7, 0)-- Décalage légèrement à gauche
mle_extLabel.Size = UDim2.new(0, 100, 0, 40)
mle_extLabel.Font = Enum.Font.SourceSans
mle_extLabel.Text = "SKILLS:  "
mle_extLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
mle_extLabel.TextScaled = true
mle_extLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
mle_extLabel.TextStrokeTransparency = 0
-- AutoFarm Label
Transformation.Parent = MenuPanel
Transformation.BackgroundTransparency = 1
Transformation.BorderSizePixel = 0
Transformation.Position = UDim2.new(0.75, -90, 0.1, 0) -- Décalage légèrement à gauche
Transformation.Size = UDim2.new(0, 100, 0, 30)
Transformation.Font = Enum.Font.SourceSans
Transformation.Text = "FROM:  "
Transformation.TextColor3 = Color3.fromRGB(255, 255, 255)
Transformation.TextScaled = true
Transformation.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
Transformation.TextStrokeTransparency = 0

local REBHOOK = Instance.new("TextButton")
REBHOOK.Parent = MenuPanel
REBHOOK.BackgroundTransparency = 1
REBHOOK.BorderSizePixel = 0
REBHOOK.Position = UDim2.new(0.75, -90, 0.3, 0)
REBHOOK.Size = UDim2.new(0, 100, 0, 30)
REBHOOK.Font = Enum.Font.SourceSans
REBHOOK.Text = "Rebirth Webhook:   coming soon !! "
REBHOOK.TextColor3 = Color3.fromRGB(255, 255, 255)
REBHOOK.TextScaled = true
REBHOOK.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
REBHOOK.TextStrokeTransparency = 0


local TPplanet = Instance.new("TextButton")
TPplanet.Parent = MenuPanel
TPplanet.BackgroundTransparency = 1
TPplanet.BorderSizePixel = 0
TPplanet.Position = UDim2.new(0.75, -90, 0.5, 0)
TPplanet.Size = UDim2.new(0, 100, 0, 22)
TPplanet.Font = Enum.Font.SourceSans
TPplanet.Text = "TPplanet:"
TPplanet.TextColor3 = Color3.fromRGB(255, 255, 255)
TPplanet.TextScaled = true
TPplanet.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
TPplanet.TextStrokeTransparency = 0

Panel.Parent = ScreenGui
Panel.BackgroundTransparency = 1
Panel.Position = UDim2.new(0.1, 39, 0, 60)
Panel.Size = UDim2.new(0, 70, 0, 0)
Panel.SizeConstraint = Enum.SizeConstraint.RelativeYY 
Panel.ImageColor3 = Color3.fromRGB(255, 255, 255)
Panel.ScaleType = Enum.ScaleType.Fit 
Panel.SliceCenter = Rect.new(10, 10, 10, 10)


missionTextLabel.Name = "MissionTextLabel"
missionTextLabel.Size = UDim2.new(0, 200, 0, 30)
missionTextLabel.Position = UDim2.new(0.5, 60, 0, 0)
missionTextLabel.AnchorPoint = Vector2.new(0.5, 0)
missionTextLabel.BackgroundTransparency = 1
missionTextLabel.Font = Enum.Font.SourceSans
missionTextLabel.TextSize = 15
missionTextLabel.TextColor3 = Color3.fromRGB(128, 128, 128)
missionTextLabel.TextStrokeTransparency = 0
missionTextLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 255)
missionTextLabel.Text = ""
missionTextLabel.Parent = TextLabel

ballFrame.Size = UDim2.new(0.01592638372826266, 0, 0.22392638372826266, 0) -- Tamaño de la bola
ballFrame.Position = UDim2.new(0.9796319186413133, 0, 0.7796319186413133, 0) -- Centro de la pantalla
ballFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 0) -- Amarillo brillante
ballFrame.BackgroundTransparency = 1 -- Totalmente opaco
ballFrame.Parent = TextLabel 

corner.CornerRadius = UDim.new(0.9, 0)
corner.Parent = ballFrame

local TweenService = game:GetService("TweenService")
local colorChangeTweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
local blurEffect = Instance.new("BlurEffect")
blurEffect.Size = 5
blurEffect.Parent = game.Lighting


pcall(function()
    ButtonCorner.Parent = MinimizeButton
    sound.SoundId = "rbxassetid://1293432192"
end)
local menuExpanded = false
local expandTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
local contractTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
local expandSize = UDim2.new(0, 410, 0, 400)
local contractSize = UDim2.new(0, 410, 0, 0)

local expandTween = TweenService:Create(MenuPanel, expandTweenInfo, {Size = expandSize})
local contractTween = TweenService:Create(MenuPanel, contractTweenInfo, {Size = contractSize})

local function SaveMenuState(isExpanded)
    local success, err = pcall(function()
        local stateInfo = {
            IsExpanded = isExpanded,
            LastModified = os.time()
        }
        writefile("MenuState.json", HttpService:JSONEncode(stateInfo))
    end)

    if not success then
        warn("Error al guardar el estado del menú: " .. tostring(err))
    end
end

local function SaveMenuState(isExpanded)
    local success, err = pcall(function()
        local stateInfo = {
            IsExpanded = isExpanded,
            LastModified = os.time()
        }
        writefile("MenuState.json", HttpService:JSONEncode(stateInfo))
    end)

    if not success then
        warn("Error al guardar el estado del menú: " .. tostring(err))
    end
end

local function LoadMenuState()
    local success, result = pcall(function()
        if isfile("MenuState.json") then
            local fileContents = readfile("MenuState.json")
            local stateData = HttpService:JSONDecode(fileContents)
            if stateData and stateData.IsExpanded ~= nil then
                return stateData.IsExpanded
            end
        end
        return false
    end)

    if not success then
        warn("Error al cargar el estado del menú: " .. tostring(result))
        return false
    end

    return result
end

menuExpanded = LoadMenuState()
MenuPanel.Visible = menuExpanded

pcall(function()
    if menuExpanded then
        MenuPanel.Size = expandSize
        MinimizeButton.Text = "-"
    else
        MenuPanel.Size = contractSize
        MinimizeButton.Text = "+"
    end
end)

MinimizeButton.MouseButton1Click:Connect(function()
    local success, err = pcall(function()
        if menuExpanded then
            contractTween:Play()
            MinimizeButton.Text = "+"
            sound:Play()
            wait(4)
            MenuPanel.Visible = false
        else
            MenuPanel.Visible = true
            expandTween:Play()
            MinimizeButton.Text = "-"
            sound:Play()
        end
        menuExpanded = not menuExpanded
        SaveMenuState(menuExpanded)
    end)

    if not success then
        warn("Error al minimizar/expandir el menú: " .. tostring(err))
    end
end)

local function initSwitches(MenuPanel)
    -- Génère un nom réaliste et unique
    local function getUniqueName(base)
        return base .. "_" .. tostring(math.random(1000, 9999))
    end

    -- Crée un élément Roblox avec propriétés
    local function createElement(class, properties)
        local instance = Instance.new(class)
        for prop, val in pairs(properties) do
            instance[prop] = val
        end
        return instance
    end

    -- Crée un switch stylé
    local function createCustomSwitch(parent, pos, nameId)
        task.wait(math.random(1, 3) / 10) -- délai anti-pattern

        local colorBase = Color3.fromRGB(230, 230, 250)

        local button = createElement("TextButton", {
            Name = getUniqueName("ToggleBtn"),
            Parent = parent,
            BackgroundColor3 = colorBase,
            BorderSizePixel = 0,
            Position = pos,
            Size = UDim2.new(0, 84, 0, 30),
            Text = "",
            AutoButtonColor = false
        })

        createElement("UICorner", {
            CornerRadius = UDim.new(0.4, 0),
            Parent = button
        })

        local ball = createElement("Frame", {
            Name = getUniqueName("Indicator"),
            Parent = button,
            BackgroundColor3 = colorBase,
            Size = UDim2.new(0, 30, 0, 30),
            Position = UDim2.new(0, 5, 0.5, -15),
            BorderSizePixel = 0
        })

        createElement("UICorner", {
            CornerRadius = UDim.new(0.5, 0),
            Parent = ball
        })

        return button, ball
    end

    -- Création sécurisée d’un switch
    local function safeCreateSwitch(pos, label)
        local success, btn, ball = pcall(function()
            return createCustomSwitch(MenuPanel, pos, label)
        end)
        return success and btn or nil, success and ball or nil
    end
end




    local function SaveSwitchState(isActive, switchName)
    pcall(function()
        local SwitchInfo = {
            SwitchOn = isActive,
            LastModified = os.time()
        }
        writefile(switchName.."_SwitchState.json", game:GetService("HttpService"):JSONEncode(SwitchInfo))
    end)
end

local function LoadSwitchState(switchName)
    local success, result = pcall(function()
        if isfile(switchName.."_SwitchState.json") then
            local fileContents = readfile(switchName.."_SwitchState.json")
            if fileContents then
                local switchData = game:GetService("HttpService"):JSONDecode(fileContents)
                if switchData and switchData.SwitchOn ~= nil then
                    return switchData.SwitchOn
                end
            end
        end
        return false
    end)

    if success then
        return result
    else
        return false
    end
end

local function toggleSwitch(isActive, switchBall)
    pcall(function()
        if isActive then
            switchBall.Position = UDim2.new(1, -35, 0.5, -15)
            switchBall.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        else
            switchBall.Position = UDim2.new(0, 5, 0.5, -15)
            switchBall.BackgroundColor3 = Color3.fromRGB(255, 21, 0)
        end
    end)
end

    local function safeLoadSwitchState(switchName)
    local success, result = pcall(function() return LoadSwitchState(switchName) end)
    return success and result or false
end

local isLoop1Active = safeLoadSwitchState("Switch1")
local isLoop2Active = safeLoadSwitchState("Switch2")
local isLoop3Active = safeLoadSwitchState("Switch3")
local isLoop5Active = safeLoadSwitchState("Switch5")
local isLoop6Active = safeLoadSwitchState("Switch6")
local isLoop7Active = safeLoadSwitchState("Switch7")
local isLoop8Active = safeLoadSwitchState("Switch8")
local isLoop9Active = safeLoadSwitchState("Switch9")
local player = game.Players.LocalPlayer

-- Attendre que tout soit prêt avant d'exécuter la suite
repeat task.wait(4) until player and player.Character and player.Character:FindFirstChild("HumanoidRootPart")
repeat task.wait(4) until game.ReplicatedStorage:FindFirstChild("Datas") and game.ReplicatedStorage.Datas:FindFirstChild(player.UserId)
repeat task.wait(4) until game.ReplicatedStorage:FindFirstChild("Package") and game.ReplicatedStorage.Package:FindFirstChild("Events")

local player = game.Players.LocalPlayer
local data = game.ReplicatedStorage.Datas[player.UserId]
local events = game:GetService("ReplicatedStorage").Package.Events
local missions = {}

-- === LISTES DE MISSIONS === --

-- Missions par défaut (Rebirth >= 5000)
local default_missions_Earth = {
    { name = "X Fighter Trainer", bossName = "X Fighter", requiredValue = 0, endRange = 4000 },
    { name = "Kid Nohag", bossName = "Kid Nohag", requiredValue = 4001, endRange = 12000 },
    { name = "Radish", bossName = "Radish", requiredValue = 12001, endRange = 1200000 },
    { name = "Perfect Atom", bossName = "Perfect Atom", requiredValue  = 1200001 , endRange = 2200000 },
    { name = "SSJB Wukong", bossName = "SSJB Wukong", requiredValue  = 2200001  , endRange = 6200000 },
    { name = "Broccoli", bossName = "Broccoli", requiredValue = 6200001 , endRange = 75000000 },
    { name = "SSJG Kakata", bossName = "SSJG Kakata", requiredValue = 77000001, endRange = math.huge }
}

local default_missions_Vills = {
    { name = "Vegetable (GoD in-training)", bossName = "Vegetable (GoD in-training)", requiredValue = 12200001, endRange = 160000000 },
    { name = "Wukong (Omen)", bossName = "Wukong (Omen)", requiredValue = 160000001 , endRange = 260000000},
    { name = "Vills (50%)", bossName = "Vills (50%)", requiredValue = 260000001 , endRange = 300000000 },
    { name = "Wukong (LBSSJ4)", bossName = "Wukong (LBSSJ4)", requiredValue = 300000001, endRange = 440000000 },
    { name = "Vekuta (LBSSJ4)", bossName = "Vekuta (LBSSJ4)", requiredValue = 440000001 , endRange = 580000000 },
    { name = "Wukong Rose", bossName = "Wukong Rose", requiredValue = 580000001 , endRange = 670000000 },
    { name = "Vekuta (SSJBUI)", bossName = "Vekuta (SSJBUI)", requiredValue = 670000001 , endRange = math.huge }
}

-- Missions pour joueurs avec peu de Rebirths (Rebirth < 5000)
local low_rebirth_missions_Earth = {
    { name = "X Fighter Trainer", bossName = "X Fighter", requiredValue = 0, endRange = 4000 },
    { name = "Kid Nohag", bossName = "Kid Nohag", requiredValue = 4001, endRange = 12000 },
    { name = "Radish", bossName = "Radish", requiredValue = 12001, endRange = 35000 },
    { name = "Mapa", bossName = "Mapa", requiredValue = 35000, endRange = 100000 },
    { name = "Top X Fighter", bossName = "X Fighter Master", requiredValue = 100001, endRange = 1200000 },
    { name = "SSJB Wukong", bossName = "SSJB Wukong", requiredValue = 1200000, endRange = 2200000 },
    { name = "Broccoli", bossName = "Broccoli", requiredValue = 2200001, endRange = 75000000 },
    { name = "SSJG Kakata", bossName = "SSJG Kakata", requiredValue = 77000001, endRange = math.huge }
}

local low_rebirth_missions_Vills = {
    { name = "Vegetable (GoD in-training)", bossName = "Vegetable (GoD in-training)", requiredValue = 120000001, endRange = 160000000 },
    { name = "Wukong (Omen)", bossName = "Wukong (Omen)", requiredValue = 160000001 , endRange = 260000000 },
    { name = "Vills (50%)", bossName = "Vills (50%)", requiredValue = 260000001 , endRange = 300000000 },
    { name = "Vis (20%)", bossName = "Vis (20%)", requiredValue = 300000001, endRange = 350000000 },
    { name = "Vegetable (LBSSJ4)", bossName = "Vegetable (LBSSJ4)", requiredValue = 350000001, endRange = 380000000 },
    { name = "Wukong (LBSSJ4)", bossName = "Wukong (LBSSJ4)", requiredValue = 380000001 , endRange = 440000000 },
    { name = "Vekuta (LBSSJ4)", bossName = "Vekuta (LBSSJ4)", requiredValue = 440000001, endRange = 580000000 },
    { name = "Wukong Rose", bossName = "Wukong Rose", requiredValue = 580000001, endRange = 670000000 },
    { name = "Vekuta (SSJBUI)", bossName = "Vekuta (SSJBUI)", requiredValue = 670000001 , endRange = math.huge }
}

-- === LOGIQUE DE SÉLECTION DES MISSIONS === --

local rebirths = data:FindFirstChild("Rebirth") and data.Rebirth.Value or 0
local useLowRebirthMissions = rebirths < 5000

if game.PlaceId == 3311165597 then
    missions = useLowRebirthMissions and low_rebirth_missions_Earth or default_missions_Earth
elseif game.PlaceId == 5151400895 then
    missions = useLowRebirthMissions and low_rebirth_missions_Vills or default_missions_Vills
else
    missions = {}
end


-- Le reste de ton code où tu utilises la liste `missions`
local SelectedQuest
local SelectedMob
local isDoingAlternateQuest = false

local function BossIsAlive(mobName)
    local boss = game.Workspace.Living:FindFirstChild(mobName)
    return boss and boss:FindFirstChild("Humanoid") and boss.Humanoid.Health > 0
end

local function getQuestByStat(stat)
    if not isLoop1Active then 
        return nil, nil, nil -- Arrête la fonction si isLoop1Active est false
    end
    
    local bestIndex = nil
    local closestRequiredValue = -math.huge

    for i, mission in ipairs(missions) do
        if mission.requiredValue <= stat and mission.requiredValue > closestRequiredValue then
            bestIndex = i
            closestRequiredValue = mission.requiredValue
        end
    end

    if bestIndex then
        local mission = missions[bestIndex]
        return mission.name, mission.bossName, bestIndex
    end

    return nil, nil, nil
end


local function assignQuest()
    if isLoop1Active then
        local lowestStat = math.min(data.Strength.Value, data.Energy.Value, data.Defense.Value, data.Speed.Value)

        local currentQuest, currentMob, questIndex = getQuestByStat(lowestStat)
        local previousQuest, previousMob = nil, nil

        -- Vérifie si une quête précédente existe
        if questIndex and questIndex > 1 then
            previousQuest = missions[questIndex - 1].name
            previousMob = missions[questIndex - 1].bossName
        end

        -- Si aucune quête n'est trouvée, avertir et quitter la fonction
        if not currentQuest then
            
            return
        end

        -- Si une quête alternative est activée et que le boss précédent est toujours vivant, on passe à la quête précédente
        if isDoingAlternateQuest and previousQuest and BossIsAlive(previousMob) then
            SelectedQuest = previousQuest
            SelectedMob = previousMob
            
        else
            -- Sinon, on passe à la quête principale
            SelectedQuest = currentQuest
            SelectedMob = currentMob
            isDoingAlternateQuest = not isDoingAlternateQuest
            
        end
    else
        
    end
end

local isTakingQuest = false

local TweenService = game:GetService("TweenService")

-- Téléportation fluide safe
local function tpSmooth(targetCFrame)
    local char = player.Character
    if not char then return end

    local hrp = char:WaitForChild("HumanoidRootPart", 3)
    if not hrp then return end

    local tween = TweenService:Create(hrp, TweenInfo.new(0.4, Enum.EasingStyle.Linear), {
        CFrame = targetCFrame
    })

    tween:Play()
    tween.Completed:Wait()
end

-- Script startMission avec tp modifié
local function startMission()
    if isLoop1Active then
        if isTakingQuest then
            return
        end
        isTakingQuest = true

        pcall(function()
            local questValue = game:GetService("ReplicatedStorage").Datas[player.UserId].Quest.Value

            -- Vérifie si la quête sélectionnée est déjà la quête en cours
            if questValue == SelectedQuest then
                isTakingQuest = false
                return
            end

            -- Recherche le NPC pour la quête sélectionnée
            local npc = game:GetService("Workspace").Others.NPCs:FindFirstChild(SelectedQuest)
            if npc and npc:FindFirstChild("HumanoidRootPart") then
                -- Téléportation fluide vers le NPC (offset de 4 studs derrière)
                tpSmooth(npc.HumanoidRootPart.CFrame * CFrame.new(0, 0, 4))
                task.wait(1)

                -- Accepte la quête
                events.Qaction:InvokeServer(npc)
            end
        end)

        task.wait(1)
        isTakingQuest = false
    end
end


task.spawn(function()
    while true do
        task.wait(1)
        print("[Mission] : Delay OK")
        pcall(function()
            
            assignQuest()
            local questData = game:GetService("ReplicatedStorage").Datas:FindFirstChild(player.UserId)
            if questData and questData:FindFirstChild("Quest") and questData.Quest.Value == ""  then
                startMission()
            end
        end)
    end
end)


task.spawn(function()
    while true do
        task.wait(1)
        print("[LA BOUCLE DE TP A ETE CHARGER AVEC SUCCES!!] : Delay OK")
        local success, err = pcall(function()
            if data.Strength.Value < 120000001 and game.PlaceId ~= 3311165597 and isLoop9Active then
                local A_1 = "Earth"
                local Event = events.TP
                if game.PlaceId ~= 3311165597 then
                    Event:InvokeServer(A_1)
                    print("Teleporting to Earth")
                    task.wait(8)
                end
            elseif data.Strength.Value >= 120000001  and game.PlaceId ~= 5151400895 and isLoop9Active then
                local A_1 = "Vills Planet"
                local Event = events.TP
                if game.PlaceId ~= 5151400895 then
                    Event:InvokeServer(A_1)
                    print("Teleporting to Vills Planet")
                    task.wait(8)
                end
            end
        end)

        if not success then
            warn("Error executing teleportation: " .. tostring(err))
        end
    end
end)


task.spawn(function()
    while true do
        task.wait(math.random(0, 0.1))  -- boucle très rapide
        print("[Boucle Rebirth] : Delay OK")  -- log visible
        if isLoop5Active then
            local success, fallo = pcall(function()
                game:GetService("ReplicatedStorage").Package.Events.reb:InvokeServer()
            end)

            if not success then
                warn("Error al invocar el evento rebirth: " .. fallo)
            end
        end
    end
end)








local TweenService = game:GetService("TweenService")

-- Téléportation fluide safe
local function tpSmooth(targetCFrame)
    local char = game.Players.LocalPlayer.Character
    if not char then return end

    local hrp = char:WaitForChild("HumanoidRootPart", 3)
    if not hrp then return end

    local tween = TweenService:Create(hrp, TweenInfo.new(0.4, Enum.EasingStyle.Linear), {
        CFrame = targetCFrame
    })

    tween:Play()
    tween.Completed:Wait()
end

task.spawn(function()
    while true do
        task.wait(1)
        print("[BOUCLE POUR BATTRE LE BOSS] : Delay OK")
        -- Vérifie qu'il y a des missions disponibles
        if #missions > 0 then
            task.spawn(function()
                local player = game.Players.LocalPlayer
                if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
                    return
                end

                local data = game.ReplicatedStorage:FindFirstChild("Datas")
                if not data then return end

                data = data[player.UserId]
                if not data or not data:FindFirstChild("Quest") then return end

                local mission = data.Quest.Value
                local bossName

                for _, quest in ipairs(missions) do
                    if quest.name == mission then
                        bossName = quest.bossName
                        break
                    end
                end

                if not bossName then return end

                local bossCount = 0
                for _, boss in ipairs(game.Workspace.Living:GetChildren()) do
                    if boss.Name == bossName and boss:FindFirstChild("HumanoidRootPart") and boss:FindFirstChild("Humanoid") and boss.Humanoid.Health > 0 then
                        bossCount += 1
                        pcall(function()
                            player.Status.Blocking.Value = true

                            local enemyHRP = boss.HumanoidRootPart
                            local behindPosition = enemyHRP.CFrame * CFrame.new(0, 0, 4)

                            -- Utilise la téléportation fluide (safe)
                            tpSmooth(behindPosition)
                        end)

                        task.wait(1)
                    end
                end

                if bossCount == 0 then
                    task.wait(1)
                    print("[ATTENTE DU BOSS] : Delay OK")
                end
            end)
        end
    end
end)




local events = game:GetService("ReplicatedStorage").Package.Events

-- Boucle 1 : spam cha sans condition
task.spawn(function()
    while true do
        task.wait(4)
        print("[Boucle DU CHARGE] : Delay OK")
        events.cha:InvokeServer("dbuexploiterssucklol")
    end
end)

-- Boucle 2 : attaque seulement si une quête est active
local player = game.Players.LocalPlayer
local ldata = game.ReplicatedStorage.Datas[player.UserId]

task.spawn(function()
    while true do
        task.wait(1)
        print("[Boucle DE COUP DE POING ] : Delay OK")
        if ldata.Quest.Value ~= "" then
            events.p:FireServer("dbuexploiterssucklol", 4)
            events.p:FireServer("dbuexploiterssucklol", 4)
        end
    end
end)



task.spawn(function()
	while true do
		task.wait(1) 
        print("[Boucle TRANSFORMATION] : Delay OK")
		if isLoop8Active then
			pcall(function()
				local Forms = {
					'Ego Instinct','Divine Blue','Divine Rose Prominence','Astral Instinct','Ultra Ego','SSJB4','True God of Creation','True God of Destruction','Super Broly',
					'LSSJG','LSSJ4','SSJG4','LSSJ3','Mystic Kaioken','LSSJ Kaioken','SSJR3','SSJB3','God Of Destruction','God Of Creation',
					'Jiren Ultra Instinct','Mastered Ultra Instinct','Godly SSJ2','Ultra Instinct Omen','Evil SSJ','Blue Evolution',
					'Dark Rose','Kefla SSJ2','SSJ Berserker','True Rose','SSJB Kaioken','SSJ Rose','SSJ Blue','Corrupt SSJ',
					'SSJ Rage','SSJG','SSJ4','Mystic','LSSJ','SSJ3','Spirit SSJ','SSJ2 Majin','SSJ2','SSJ Kaioken','SSJ','FSSJ','Kaioken'
				}

				local rs = game:GetService("ReplicatedStorage").Package.Events
				local player = game:GetService("Players").LocalPlayer
				local stats = player.Character:WaitForChild("Stats")
				local status = player.Status

				if stats.Strength.Value > 5000 and stats.Defense.Value > 5000 and stats.Energy.Value > 5000 and stats.Speed.Value > 5000 then
					local current = status.Transformation.Value
					local best

					for _, form in ipairs(Forms) do
						if rs.equipskill:InvokeServer(form) then
							best = form
							break
						end
					end

					if best and best ~= current then
						if current ~= "" then rs.ta:InvokeServer() task.wait(4) end
						rs.equipskill:InvokeServer(best)
						task.wait(4)
						if status.Transformation.Value == best then
							rs.ta:InvokeServer()
						else
							warn("Échec de transformation : " .. tostring(best))
						end
					elseif best == current and not status.Transforming.Value then
						rs.ta:InvokeServer()
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	while true do
		if isLoop3Active then
			local lplr = game.Players.LocalPlayer
			if not lplr then return end

			local success, err = pcall(function()
				if lplr.PlayerGui:FindFirstChild("Start") then
					local ReplicatedStorage = game:GetService("ReplicatedStorage")
					local Workspace = game:GetService("Workspace")

					ReplicatedStorage.Package.Events.Start:InvokeServer()

					if Workspace.Others:FindFirstChild("Title") then
						Workspace.Others.Title:Destroy()
					end

					local cam = Workspace.CurrentCamera
					cam.CameraType = Enum.CameraType.Custom
					cam.CameraSubject = lplr.Character.Humanoid

					_G.Ready = true
					game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, true)

					lplr.PlayerGui.Main.Enabled = true

					if lplr.PlayerGui:FindFirstChild("Start") then
						lplr.PlayerGui.Start:Destroy()
					end

					pcall(function()
						lplr.PlayerGui.Main.bruh.Enabled = false
					end)
					pcall(function()
						lplr.PlayerGui.Main.bruh.Enabled = true
					end)

					local s = lplr.PlayerGui.Main.MainFrame.Frames.Quest
					if s then
						s.Visible = true

						-- Animation parallèle
						task.spawn(function()
							while true do
								pcall(function()
									if s then
										s.Position = UDim2.new(2, 0, 0, 0)
										task.wait(4)
                                        print("[Boucle STARTBYPASS] : Delay OK")
									end
								end)
								task.wait(4)
                                print("[Boucle STARTBYPASSSY] : Delay OK")
							end
						end)
					end
				end
			end)

			if not success then
				warn(err)
			end
		end
		task.wait(4)
        print("[BYOASS] : Delay OK")
	end
end)


task.spawn(function()
	while true do
		task.wait(4)
        print("[Boucle SKILLS] : Delay OK")
        
		if not isLoop7Active then
			continue
		end

		local lplr = game.Players.LocalPlayer
		local character = lplr.Character
		if not character then continue end

		local stats = character:FindFirstChild("Stats")
		local humanoid = character:FindFirstChild("Humanoid")
		if not stats or not humanoid then continue end

		local Ki = stats:FindFirstChild("Ki")
		if not Ki then continue end

		for _, player in ipairs(game.Players:GetPlayers()) do
			local ldata = game.ReplicatedStorage.Datas:FindFirstChild(player.UserId)
			if not ldata or not ldata:FindFirstChild("Quest") then continue end

			if ldata.Quest.Value ~= ""
				and ldata:FindFirstChild("Strength") and ldata.Strength.Value > 400000
				and ldata:FindFirstChild("Energy") and ldata.Energy.Value > 400000
				and ldata:FindFirstChild("Defense") and ldata.Defense.Value > 400000
				and ldata:FindFirstChild("Speed") and ldata.Speed.Value > 400000
			then
				local playerChar = player.Character
				local hrp = playerChar and playerChar:FindFirstChild("HumanoidRootPart")
				if not hrp then continue end

				local closestBoss, closestDistance = nil, math.huge
				for _, v in ipairs(game.Workspace.Living:GetChildren()) do
					if v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
						local dist = (hrp.Position - v.HumanoidRootPart.Position).Magnitude
						if dist < closestDistance and v.Humanoid.Health > 0 and v.Name ~= playerChar.Name then
							closestDistance, closestBoss = dist, v
						end
					end
				end

				if closestBoss and closestDistance <= 5 and closestBoss.Humanoid.Health > 0 then
					local attacks = {
						"Super Dragon Fist", "God Slicer", "Spirit Barrage", "Mach Kick",
						"Wolf Fang Fist", "High Power Rush", "Meteor Strike", "Meteor Charge",
						function()
							game.ReplicatedStorage.Package.Events.voleys:InvokeServer("Energy Volley", {
								FaceMouse = false,
								MouseHit = CFrame.new()
							}, "dbuexploiterssucklol")
						end
					}

					for _, attack in ipairs(attacks) do
						task.spawn(function()
							if typeof(attack) == "string" then
								game.ReplicatedStorage.Package.Events.mel:InvokeServer(attack, "dbuexploiterssucklol")
							elseif typeof(attack) == "function" then
								attack()
							end
						end)
					end
				end
			end
		end
	end
end)



task.spawn(function()
    local delayBetween = 0.2  -- tu peux ajuster la vitesse ici

    local switchButton1, switchBall1 = safeCreateSwitch(UDim2.new(0.3, 0, 0.1, 0), "Switch1")
    task.wait(delayBetween)
    local switchButton3, switchBall3 = safeCreateSwitch(UDim2.new(0.3, 0, 0.3, 0), "Switch3")
    task.wait(delayBetween)
    local switchButton5, switchBall5 = safeCreateSwitch(UDim2.new(0.3, 0, 0.5, 0), "Switch5")
    task.wait(delayBetween)
    local switchButton7, switchBall7 = safeCreateSwitch(UDim2.new(0.3, 0, 0.7, 0), "Switch7")
    task.wait(delayBetween)
    local switchButton8, switchBall8 = safeCreateSwitch(UDim2.new(0.75 , 0, 0.1, 0), "Switch8")
    task.wait(delayBetween)
    local switchButton9, switchBall9 = safeCreateSwitch(UDim2.new(0.75 , 0, 0.5, 0), "Switch9")
    task.wait(delayBetween)

    switchButton1.MouseButton1Click:Connect(function()
        pcall(function()
            isLoop1Active = not isLoop1Active
            toggleSwitch(isLoop1Active, switchBall1)
            SaveSwitchState(isLoop1Active, "Switch1")
        end)
    end)

    task.wait(delayBetween)

    switchButton3.MouseButton1Click:Connect(function()
        pcall(function()
            isLoop3Active = not isLoop3Active
            toggleSwitch(isLoop3Active, switchBall3)
            SaveSwitchState(isLoop3Active, "Switch3")
        end)
    end)

    task.wait(delayBetween)

    switchButton5.MouseButton1Click:Connect(function()
        pcall(function()
            isLoop5Active = not isLoop5Active
            toggleSwitch(isLoop5Active, switchBall5)
            SaveSwitchState(isLoop5Active, "Switch5")
        end)
    end)

    task.wait(delayBetween)

    switchButton7.MouseButton1Click:Connect(function()
        pcall(function()
            isLoop7Active = not isLoop7Active
            toggleSwitch(isLoop7Active, switchBall7)
            SaveSwitchState(isLoop7Active, "Switch7")
        end)
    end)

    task.wait(delayBetween)

    switchButton8.MouseButton1Click:Connect(function()
        pcall(function()
            isLoop8Active = not isLoop8Active
            toggleSwitch(isLoop8Active, switchBall8)
            SaveSwitchState(isLoop8Active, "Switch8")
        end)
    end)

    task.wait(delayBetween)

    switchButton9.MouseButton1Click:Connect(function()
        pcall(function()
            isLoop9Active = not isLoop9Active
            toggleSwitch(isLoop9Active, switchBall9)
            SaveSwitchState(isLoop9Active, "Switch9")
        end)
    end)

    -- Appliquer les états visuels initiaux après un petit délai
    task.wait(0.1)
    toggleSwitch(isLoop1Active, switchBall1)
    toggleSwitch(isLoop3Active, switchBall3)
    toggleSwitch(isLoop5Active, switchBall5)
    toggleSwitch(isLoop7Active, switchBall7)
    toggleSwitch(isLoop8Active, switchBall8)
    toggleSwitch(isLoop9Active, switchBall9)
end)


initSwitches(MenuPanel)
MainButton.MouseButton1Click:Connect(function()
    pcall(togglePanel)
end)




